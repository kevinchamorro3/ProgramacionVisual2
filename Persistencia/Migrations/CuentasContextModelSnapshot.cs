// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

namespace Persistencia.Migrations
{
    [DbContext(typeof(CuentasContext))]
    partial class CuentasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Cuentas.Banco", b =>
                {
                    b.Property<int>("BancoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("CorrienteID")
                        .HasColumnType("int");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BancoId");

                    b.HasIndex("CorrienteID");

                    b.ToTable("bancos");
                });

            modelBuilder.Entity("Modelo.Cuentas.Caja", b =>
                {
                    b.Property<int>("CajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("CorrienteID")
                        .HasColumnType("int");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CajaId");

                    b.HasIndex("CorrienteID");

                    b.ToTable("cajas");
                });

            modelBuilder.Entity("Modelo.Cuentas.CajaChica", b =>
                {
                    b.Property<int>("CajaChicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("CorrienteID")
                        .HasColumnType("int");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CajaChicaId");

                    b.HasIndex("CorrienteID")
                        .IsUnique();

                    b.ToTable("cajaChicas");
                });

            modelBuilder.Entity("Modelo.Cuentas.Capital", b =>
                {
                    b.Property<int>("CapitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatrimonioID")
                        .HasColumnType("int");

                    b.HasKey("CapitalId");

                    b.HasIndex("PatrimonioID")
                        .IsUnique();

                    b.ToTable("capitals");
                });

            modelBuilder.Entity("Modelo.Cuentas.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("CorrienteID")
                        .HasColumnType("int");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.HasIndex("CorrienteID");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Modelo.Cuentas.Corriente", b =>
                {
                    b.Property<int>("CorrienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CorrienteId");

                    b.ToTable("corrientes");
                });

            modelBuilder.Entity("Modelo.Cuentas.DepreciacionEdificio", b =>
                {
                    b.Property<int>("DepreciacionEdificioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("EdificioID")
                        .HasColumnType("int");

                    b.Property<int?>("FijoId")
                        .HasColumnType("int");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepreciacionEdificioId");

                    b.HasIndex("EdificioID")
                        .IsUnique();

                    b.HasIndex("FijoId");

                    b.ToTable("depreciacionEdificios");
                });

            modelBuilder.Entity("Modelo.Cuentas.DepreciacionEquipos", b =>
                {
                    b.Property<int>("DepreciacionEquiposId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("EquiposOficinaID")
                        .HasColumnType("int");

                    b.Property<int?>("FijoId")
                        .HasColumnType("int");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepreciacionEquiposId");

                    b.HasIndex("EquiposOficinaID")
                        .IsUnique();

                    b.HasIndex("FijoId");

                    b.ToTable("depreciacionEquipos");
                });

            modelBuilder.Entity("Modelo.Cuentas.DocumentosCobrar", b =>
                {
                    b.Property<int>("DocumentosCobrarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("CorrienteID")
                        .HasColumnType("int");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentosCobrarId");

                    b.HasIndex("CorrienteID");

                    b.ToTable("documentosCobrars");
                });

            modelBuilder.Entity("Modelo.Cuentas.DocumentosPagar", b =>
                {
                    b.Property<int>("DocumentosPagarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlazoCortoID")
                        .HasColumnType("int");

                    b.HasKey("DocumentosPagarId");

                    b.HasIndex("PlazoCortoID");

                    b.ToTable("documentosPagars");
                });

            modelBuilder.Entity("Modelo.Cuentas.Edificio", b =>
                {
                    b.Property<int>("EdificioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<int>("DepreciacionEdificioId")
                        .HasColumnType("int");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<int>("FijoID")
                        .HasColumnType("int");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EdificioId");

                    b.HasIndex("FijoID");

                    b.ToTable("edificios");
                });

            modelBuilder.Entity("Modelo.Cuentas.EquiposOficina", b =>
                {
                    b.Property<int>("EquiposOficinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<int>("DepreciacionEquiposId")
                        .HasColumnType("int");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<int>("FijoID")
                        .HasColumnType("int");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquiposOficinaId");

                    b.HasIndex("FijoID");

                    b.ToTable("equiposOficinas");
                });

            modelBuilder.Entity("Modelo.Cuentas.Fijo", b =>
                {
                    b.Property<int>("FijoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("FijoId");

                    b.ToTable("fijos");
                });

            modelBuilder.Entity("Modelo.Cuentas.IeesPagar", b =>
                {
                    b.Property<int>("IeesPagarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlazoCortoID")
                        .HasColumnType("int");

                    b.HasKey("IeesPagarId");

                    b.HasIndex("PlazoCortoID");

                    b.ToTable("ieesPagars");
                });

            modelBuilder.Entity("Modelo.Cuentas.ImpuestosPagar", b =>
                {
                    b.Property<int>("ImpuestosPagarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlazoCortoID")
                        .HasColumnType("int");

                    b.HasKey("ImpuestosPagarId");

                    b.HasIndex("PlazoCortoID");

                    b.ToTable("impuestosPagars");
                });

            modelBuilder.Entity("Modelo.Cuentas.InteresesPagar", b =>
                {
                    b.Property<int>("InteresesPagarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlazoCortoID")
                        .HasColumnType("int");

                    b.HasKey("InteresesPagarId");

                    b.HasIndex("PlazoCortoID");

                    b.ToTable("interesesPagars");
                });

            modelBuilder.Entity("Modelo.Cuentas.Inventario", b =>
                {
                    b.Property<int>("InventarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("CorrienteID")
                        .HasColumnType("int");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InventarioId");

                    b.HasIndex("CorrienteID")
                        .IsUnique();

                    b.ToTable("inventarios");
                });

            modelBuilder.Entity("Modelo.Cuentas.IvaCobrado", b =>
                {
                    b.Property<int>("IvaCobradoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlazoCortoID")
                        .HasColumnType("int");

                    b.HasKey("IvaCobradoId");

                    b.HasIndex("PlazoCortoID");

                    b.ToTable("ivaCobrados");
                });

            modelBuilder.Entity("Modelo.Cuentas.IvaPagado", b =>
                {
                    b.Property<int>("IvaPagadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("CorrienteID")
                        .HasColumnType("int");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IvaPagadoId");

                    b.HasIndex("CorrienteID");

                    b.ToTable("ivaPagados");
                });

            modelBuilder.Entity("Modelo.Cuentas.Patrimonio", b =>
                {
                    b.Property<int>("PatrimonioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("PatrimonioID");

                    b.ToTable("patrimonios");
                });

            modelBuilder.Entity("Modelo.Cuentas.PlazoCorto", b =>
                {
                    b.Property<int>("PlazoCortoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("PlazoCortoId");

                    b.ToTable("plazoCortos");
                });

            modelBuilder.Entity("Modelo.Cuentas.PlazoLargo", b =>
                {
                    b.Property<int>("PlazoLargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("PlazoLargoId");

                    b.ToTable("plazoLargos");
                });

            modelBuilder.Entity("Modelo.Cuentas.PrestamosBancarios", b =>
                {
                    b.Property<int>("PrestamosBancariosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlazoLargoID")
                        .HasColumnType("int");

                    b.HasKey("PrestamosBancariosId");

                    b.HasIndex("PlazoLargoID");

                    b.ToTable("prestamosBancarios");
                });

            modelBuilder.Entity("Modelo.Cuentas.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlazoCortoID")
                        .HasColumnType("int");

                    b.HasKey("ProveedorId");

                    b.HasIndex("PlazoCortoID");

                    b.ToTable("proveedors");
                });

            modelBuilder.Entity("Modelo.Cuentas.Suministros", b =>
                {
                    b.Property<int>("SuministrosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<int>("CorrienteID")
                        .HasColumnType("int");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuministrosId");

                    b.HasIndex("CorrienteID");

                    b.ToTable("suministros");
                });

            modelBuilder.Entity("Modelo.Cuentas.Terreno", b =>
                {
                    b.Property<int>("TerrenoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<int>("FijoID")
                        .HasColumnType("int");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TerrenoId");

                    b.HasIndex("FijoID");

                    b.ToTable("terrenos");
                });

            modelBuilder.Entity("Modelo.Cuentas.UtilidadEjercicio", b =>
                {
                    b.Property<int>("UtilidadEjercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatrimonioID")
                        .HasColumnType("int");

                    b.HasKey("UtilidadEjercicioId");

                    b.HasIndex("PatrimonioID")
                        .IsUnique();

                    b.ToTable("utilidadEjercicios");
                });

            modelBuilder.Entity("Modelo.Cuentas.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreedor")
                        .HasColumnType("float");

                    b.Property<double>("Debe")
                        .HasColumnType("float");

                    b.Property<double>("Deudor")
                        .HasColumnType("float");

                    b.Property<int>("FijoID")
                        .HasColumnType("int");

                    b.Property<double>("Haber")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehiculoId");

                    b.HasIndex("FijoID");

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("Modelo.Cuentas.Banco", b =>
                {
                    b.HasOne("Modelo.Cuentas.Corriente", "Corriente")
                        .WithMany("Bancos")
                        .HasForeignKey("CorrienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corriente");
                });

            modelBuilder.Entity("Modelo.Cuentas.Caja", b =>
                {
                    b.HasOne("Modelo.Cuentas.Corriente", "Corriente")
                        .WithMany("Cajas")
                        .HasForeignKey("CorrienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corriente");
                });

            modelBuilder.Entity("Modelo.Cuentas.CajaChica", b =>
                {
                    b.HasOne("Modelo.Cuentas.Corriente", "Corriente")
                        .WithOne("CajaChica")
                        .HasForeignKey("Modelo.Cuentas.CajaChica", "CorrienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corriente");
                });

            modelBuilder.Entity("Modelo.Cuentas.Capital", b =>
                {
                    b.HasOne("Modelo.Cuentas.Patrimonio", "Patrimonio")
                        .WithOne("Capital")
                        .HasForeignKey("Modelo.Cuentas.Capital", "PatrimonioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Modelo.Cuentas.Cliente", b =>
                {
                    b.HasOne("Modelo.Cuentas.Corriente", "Corriente")
                        .WithMany("Clientes")
                        .HasForeignKey("CorrienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corriente");
                });

            modelBuilder.Entity("Modelo.Cuentas.DepreciacionEdificio", b =>
                {
                    b.HasOne("Modelo.Cuentas.Edificio", "Edificio")
                        .WithOne("DepreciacionEdificio")
                        .HasForeignKey("Modelo.Cuentas.DepreciacionEdificio", "EdificioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Cuentas.Fijo", "Fijo")
                        .WithMany()
                        .HasForeignKey("FijoId");

                    b.Navigation("Edificio");

                    b.Navigation("Fijo");
                });

            modelBuilder.Entity("Modelo.Cuentas.DepreciacionEquipos", b =>
                {
                    b.HasOne("Modelo.Cuentas.EquiposOficina", "EquiposOficina")
                        .WithOne("DepreciacionEquipos")
                        .HasForeignKey("Modelo.Cuentas.DepreciacionEquipos", "EquiposOficinaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Cuentas.Fijo", "Fijo")
                        .WithMany()
                        .HasForeignKey("FijoId");

                    b.Navigation("EquiposOficina");

                    b.Navigation("Fijo");
                });

            modelBuilder.Entity("Modelo.Cuentas.DocumentosCobrar", b =>
                {
                    b.HasOne("Modelo.Cuentas.Corriente", "Corriente")
                        .WithMany("DocumentosCobrars")
                        .HasForeignKey("CorrienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corriente");
                });

            modelBuilder.Entity("Modelo.Cuentas.DocumentosPagar", b =>
                {
                    b.HasOne("Modelo.Cuentas.PlazoCorto", "PlazoCorto")
                        .WithMany("DocuementosPagars")
                        .HasForeignKey("PlazoCortoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlazoCorto");
                });

            modelBuilder.Entity("Modelo.Cuentas.Edificio", b =>
                {
                    b.HasOne("Modelo.Cuentas.Fijo", "Fijo")
                        .WithMany("Edificios")
                        .HasForeignKey("FijoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fijo");
                });

            modelBuilder.Entity("Modelo.Cuentas.EquiposOficina", b =>
                {
                    b.HasOne("Modelo.Cuentas.Fijo", "Fijo")
                        .WithMany("EquiposOficinas")
                        .HasForeignKey("FijoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fijo");
                });

            modelBuilder.Entity("Modelo.Cuentas.IeesPagar", b =>
                {
                    b.HasOne("Modelo.Cuentas.PlazoCorto", "PlazoCorto")
                        .WithMany("IeesPagars")
                        .HasForeignKey("PlazoCortoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlazoCorto");
                });

            modelBuilder.Entity("Modelo.Cuentas.ImpuestosPagar", b =>
                {
                    b.HasOne("Modelo.Cuentas.PlazoCorto", "PlazoCorto")
                        .WithMany("ImpuestosPagars")
                        .HasForeignKey("PlazoCortoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlazoCorto");
                });

            modelBuilder.Entity("Modelo.Cuentas.InteresesPagar", b =>
                {
                    b.HasOne("Modelo.Cuentas.PlazoCorto", "PlazoCorto")
                        .WithMany("InteresesPagars")
                        .HasForeignKey("PlazoCortoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlazoCorto");
                });

            modelBuilder.Entity("Modelo.Cuentas.Inventario", b =>
                {
                    b.HasOne("Modelo.Cuentas.Corriente", "Corriente")
                        .WithOne("Inventario")
                        .HasForeignKey("Modelo.Cuentas.Inventario", "CorrienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corriente");
                });

            modelBuilder.Entity("Modelo.Cuentas.IvaCobrado", b =>
                {
                    b.HasOne("Modelo.Cuentas.PlazoCorto", "PlazoCorto")
                        .WithMany("IvaCobrados")
                        .HasForeignKey("PlazoCortoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlazoCorto");
                });

            modelBuilder.Entity("Modelo.Cuentas.IvaPagado", b =>
                {
                    b.HasOne("Modelo.Cuentas.Corriente", "Corriente")
                        .WithMany("IvasPagados")
                        .HasForeignKey("CorrienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corriente");
                });

            modelBuilder.Entity("Modelo.Cuentas.PrestamosBancarios", b =>
                {
                    b.HasOne("Modelo.Cuentas.PlazoLargo", "PlazoLargo")
                        .WithMany("PrestamosBancarios")
                        .HasForeignKey("PlazoLargoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlazoLargo");
                });

            modelBuilder.Entity("Modelo.Cuentas.Proveedor", b =>
                {
                    b.HasOne("Modelo.Cuentas.PlazoCorto", "PlazoCorto")
                        .WithMany("Proveedores")
                        .HasForeignKey("PlazoCortoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlazoCorto");
                });

            modelBuilder.Entity("Modelo.Cuentas.Suministros", b =>
                {
                    b.HasOne("Modelo.Cuentas.Corriente", "Corriente")
                        .WithMany("Suminitros")
                        .HasForeignKey("CorrienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corriente");
                });

            modelBuilder.Entity("Modelo.Cuentas.Terreno", b =>
                {
                    b.HasOne("Modelo.Cuentas.Fijo", "Fijo")
                        .WithMany("Terrenos")
                        .HasForeignKey("FijoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fijo");
                });

            modelBuilder.Entity("Modelo.Cuentas.UtilidadEjercicio", b =>
                {
                    b.HasOne("Modelo.Cuentas.Patrimonio", "Patrimonio")
                        .WithOne("UtilidadEjercicio")
                        .HasForeignKey("Modelo.Cuentas.UtilidadEjercicio", "PatrimonioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Modelo.Cuentas.Vehiculo", b =>
                {
                    b.HasOne("Modelo.Cuentas.Fijo", "Fijo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("FijoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fijo");
                });

            modelBuilder.Entity("Modelo.Cuentas.Corriente", b =>
                {
                    b.Navigation("Bancos");

                    b.Navigation("CajaChica");

                    b.Navigation("Cajas");

                    b.Navigation("Clientes");

                    b.Navigation("DocumentosCobrars");

                    b.Navigation("Inventario");

                    b.Navigation("IvasPagados");

                    b.Navigation("Suminitros");
                });

            modelBuilder.Entity("Modelo.Cuentas.Edificio", b =>
                {
                    b.Navigation("DepreciacionEdificio");
                });

            modelBuilder.Entity("Modelo.Cuentas.EquiposOficina", b =>
                {
                    b.Navigation("DepreciacionEquipos");
                });

            modelBuilder.Entity("Modelo.Cuentas.Fijo", b =>
                {
                    b.Navigation("Edificios");

                    b.Navigation("EquiposOficinas");

                    b.Navigation("Terrenos");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Modelo.Cuentas.Patrimonio", b =>
                {
                    b.Navigation("Capital");

                    b.Navigation("UtilidadEjercicio");
                });

            modelBuilder.Entity("Modelo.Cuentas.PlazoCorto", b =>
                {
                    b.Navigation("DocuementosPagars");

                    b.Navigation("IeesPagars");

                    b.Navigation("ImpuestosPagars");

                    b.Navigation("InteresesPagars");

                    b.Navigation("IvaCobrados");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Modelo.Cuentas.PlazoLargo", b =>
                {
                    b.Navigation("PrestamosBancarios");
                });
#pragma warning restore 612, 618
        }
    }
}
